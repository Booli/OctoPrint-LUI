#!/bin/bash

###
# Script changes screen settings when new screen is attached.
# Automaticaally runs when screens with USB are pluged into the raspberry (only when raspberry is turned on)
# For other connection types run /home/pi/scripts/runScreenResize manually
###

script_name="runScreenResize"
autostart="/home/pi/.config/openbox/autostart"

run_screensetting(){
#when adding a new screen X, us one of these (el)if-statements as a template.
#create a configX.txt file and dorotatetuchX file with the correct settings in Octoprint-LUI/octoprint-lui/system-scripts/boot and ./usrbin respectively.
#.screenupdater and runScreenResize will do the rest!

  #detect connected screen en set files accordingly
	if [[ $(lsusb | grep 'D-WAV') = *D-WAV* ]]; then
		sudo rm /boot/config.txt
		sleep 1
		sudo cp /boot/configWave.txt /boot/config.txt
		sudo logger "config file set to WaveShare screen, resolution is 1024x600, display rotation is 1"
		
		sudo rm /usr/bin/dorotatetouch
		sleep 1
		sudo cp /usr/bin/dorotatetouchWave /usr/bin/dorotatetouch
		sudo logger "rotation matrix for touchscreen set to 0 1 0; -1 0 1; 0 0 1;"
		
		#set files to save last used screen
		sudo rm /home/pi/.config/.AtmelInstalled
		sudo rm /home/pi/.config/.FT5406Installed
		sudo touch /home/pi/.config/.WaveInstalled
		
		REBOOT="yes"
	elif [[ $(lsusb | grep 'Atmel') = *Atmel* ]]; then
		sudo rm /boot/config.txt
		sleep 1
		sudo cp /boot/configAtmel.txt /boot/config.txt
		sudo logger "config file set to Atmel screen, resolution is 800x480, display rotation is 3"
		
		sudo rm /usr/bin/dorotatetouch
		sleep 1
		sudo cp /usr/bin/dorotatetouchAtmel /usr/bin/dorotatetouch
		sudo logger "rotation matrix for touchscreen set to 0 -1 1; 1 0 0; 0 0 1;"
		
		#set files to save last used screen
		sudo rm /home/pi/.config/.WaveInstalled
		sudo rm /home/pi/.config/.FT5406Installed
		sudo touch /home/pi/.config/.AtmelInstalled
		
		REBOOT="yes"
	# the FT5406 uses the same settings as the Atmel screen
	#it's been coded seperately to serve as an example for adding new screens in the future
	elif [[ $(dmesg | grep 'FT5406') = *FT5406* ]]; then
		sudo rm /boot/config.txt
		sleep 1
		sudo cp /boot/configFT5406.txt /boot/config.txt
		sudo logger "config file set to FT5406 screen, resolution auto, console size forced, display rotation is 3"
		
		sudo rm /usr/bin/dorotatetouch
		sleep 1
		#same touch rotation as Atmel so file can be reused
		sudo cp /usr/bin/dorotatetouchAtmel /usr/bin/dorotatetouch
		sudo logger "rotation matrix for touchscreen set to 0 -1 1; 1 0 0; 0 0 1;"
		
		#set files to save last used screen
		sudo rm /home/pi/.config/.AtmelInstalled
		sudo rm /home/pi/.config/.WaveInstalled
		sudo touch /home/pi/.config/.FT5406Installed
		
		REBOOT="yes"
	fi
}

set_readwrite(){
    if ! grep -i -q "$script_name" "$autostart"; then
        sudo sed -i "s@boot=overlay @@" /boot/cmdline.txt
        sudo sed -i "s@root_readonly=\"yes\"@root_readonly=\"no\"@" /boot/octopi.txt
        sudo sed -i "1 i\/home/pi/scripts/runScreenResize run" "$autostart"
        sudo logger "script installed"
    fi
}

set_readonly() {
    sudo sed -i "/runScreenResize/d" "$autostart"
    if ! grep -q "boot=overlay" /boot/cmdline.txt ; then
        sudo sed -i '1s@^@boot=overlay @' /boot/cmdline.txt
    fi
    sudo sed -i "s@root_readonly=\"no\"@root_readonly=\"yes\"@" /boot/octopi.txt
    sudo logger "Script uninstalled"
}

cleanrun(){
REBOOT="no"
#when adding new screen, use one of these if-statements as template. 
  if [[ $(lsusb | grep 'Atmel') = *Atmel* ]]; then
	  sudo logger "Found Atmel Board in system."
	  #if AtmelInstalled doesn't exist, that means other screen settings are being used than the ones required
	  if [ ! -f /home/pi/.config/.AtmelInstalled ]; then 
		  echo "Atmel settings not yet set, rebooting.."
		  set_readwrite
		  sudo logger "need to turn to read-write mode"
		  REBOOT="yes"
	  else 
		  echo "Atmel screen settings already set"
	  fi
	  #set correct zoom level
	  if [[ $(grep "default_zoom" /home/pi/.config/chromium/Default/Preferences) = *default_zoom* ]]; then
      sudo logger "Chromium had wrong zoom for this screen."
		  sudo pkill -f "chromium"
		  sudo rm /home/pi/.config/chromium/Default/Preferences
		  sleep 1
		  sudo cp /home/pi/.config/chromium/Default/Preferences800x480 /home/pi/.config/chromium/Default/Preferences
		  sudo service lightdm restart
      sudo logger "Changed Chromium zoom for the right screen."
	  fi
  fi

  if [[ $(lsusb | grep 'D-WAV') = *D-WAV* ]]; then
	  sudo logger "Found D-Wave Board in system."
	  if [ ! -f /home/pi/.config/.WaveInstalled ]; then 
		  echo "D-Wave settings not yet set, rebooting.."
		  set_readwrite
		  sudo logger "need to turn to read-write mode"
		  REBOOT="yes"
	  else 
		  echo "D-Wave screen settings already set"
	  fi
	  if ! [[ $(grep "default_zoom" /home/pi/.config/chromium/Default/Preferences) = *default_zoom* ]]; then
      sudo logger "Chromium had wrong zoom for this screen."
		  sudo pkill -f "chromium"
		  sudo rm /home/pi/.config/chromium/Default/Preferences
		  sleep 1
		  sudo cp /home/pi/.config/chromium/Default/Preferences1024x600 /home/pi/.config/chromium/Default/Preferences
		  sudo service lightdm restart
      sudo logger "Changed Chromium zoom for the right screen."
	  fi
  fi
  
  if [[ $(dmesg | grep 'FT5406') = *FT5406* ]]; then
	  sudo logger "Found FT5406 Board in system."
	  if [ ! -f /home/pi/.config/.FT5406Installed ]; then
		  echo "FT5406 settings not yet set, rebooting.."
		  set_readwrite
		  sudo logger "need to turn to read-write mode"
		  REBOOT="yes"
	  else 
		  echo "FT5406 screen settings already set"
	  fi
	  if [[ $(grep "default_zoom" /home/pi/.config/chromium/Default/Preferences) = *default_zoom* ]]; then
      sudo logger "Chromium had wrong zoom for this screen."
		  sudo pkill -f "chromium"
		  sudo rm /home/pi/.config/chromium/Default/Preferences
		  sleep 1
		  sudo cp /home/pi/.config/chromium/Default/Preferences800x480 /home/pi/.config/chromium/Default/Preferences
		  sudo service lightdm restart
      sudo logger "Changed Chromium zoom for the right screen."
	  fi
  fi
  sudo logger "reboot = $REBOOT"
}



key=$1
sleep 1
case $key in 
    "run")
    run_screensetting
    set_readonly
    sudo reboot
    ;;

    *)
    cleanrun
    ;;
esac

if [ $REBOOT == "yes" ] 
then
sudo reboot
fi

sudo service lightdm restart

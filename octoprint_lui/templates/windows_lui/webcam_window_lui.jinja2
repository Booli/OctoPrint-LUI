<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="user-scalable=no">
    <title>OctoPrint - LUI</title>
        {% include '/stylesheets_lui.jinja2' %}
        <script>
  var UI_API_KEY = "{{ uiApiKey }}";
  var BASEURL = "{{ url_for('index') }}";
  var API_BASEURL = BASEURL + "api/";
  var PLUGIN_BASEURL = BASEURL + "plugin/";

  var CONFIG_DEBUG = {%  if debug -%} true; {% else %} false; {%- endif %}
  var CONFIG_SD_SUPPORT = {% if enableSdSupport -%} true; {% else %} false; {%- endif %}

  var SOCKJS_URI = "{{ url_for('index') }}" + "sockjs";
  var SOCKJS_DEBUG = CONFIG_DEBUG;
  var SOCKJS_CLOSE_NORMAL = 1000;

  var IS_LOCAL = {%  if local_addr -%} true; {% else %} false; {%- endif %}
</script>

</head>
<body>
	<header id="header" class="app-window-header">
		<div class="header_logo" data-bind="click: function() { location.reload(); }">
			<a href="#" class="logo">
				<img src="{{ url_for("plugin.lui.static", filename="img/logo.png") }}" height="45px">
			</a>
		</div>
	</header>
	<div id="webcam"><noscript><img src="/webcam/?action=snapshot" /></noscript></div>

    <script src="{{ url_for("static", filename="js/lib/jquery/jquery-2.1.4.min.js") }}"></script>
	<script type="text/javascript">

	$(createImageLayer);

	/* Copyright (C) 2007 Richard Atterer, richardÂ©atterer.net
	   This program is free software; you can redistribute it and/or modify it
	   under the terms of the GNU General Public License, version 2. See the file
	   COPYING for details. */

	var imageNr = 0; // Serial number of current image
	var finished = new Array(); // References to img objects which have finished downloading
	var paused = false;

	function createImageLayer() {
	  var img = new Image();
	  img.style.position = "absolute";
	  img.style.zIndex = -1;
	  img.onload = imageOnload;
	  img.onclick = imageOnclick;
	  img.src = "/webcam/?action=snapshot&n=" + (++imageNr);
	  var webcam = document.getElementById("webcam");
	  webcam.insertBefore(img, webcam.firstChild);
	}

	// Two layers are always present (except at the very beginning), to avoid flicker
	function imageOnload() {
	  this.style.zIndex = imageNr; // Image finished, bring to front!
	  while (1 < finished.length) {
		var del = finished.shift(); // Delete old image(s) from document
		del.parentNode.removeChild(del);
	  }
	  finished.push(this);
	  if (!paused) createImageLayer();
	}

	function imageOnclick() { // Clicking on the image will pause the stream
	  paused = !paused;
	  if (!paused) createImageLayer();
	}

	</script>
</body>
</html>
